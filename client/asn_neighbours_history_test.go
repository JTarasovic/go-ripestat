package client

import "fmt"

func ExampleClient_ASNNeighboursHistory() {
	c := NewClient().WithSourceApp("go-ripestat")
	resource := "64496" // ASN
	starttime := ""     // ISO8601 or Unix timestamp for query start
	endtime := ""       // ISO8601 or Unix timestamp for query start
	maxRows := ""       // Defines the limit of neighbours to be included in the result, e.g. max_rows=50 means the result will be truncated to 50 neighbours.
	r, err := c.ASNNeighboursHistory(resource, starttime, endtime, maxRows)
	if err != nil {
		panic(err)
	}
	data := r["data"].(map[string]interface{})
	delete(data, "query_starttime")
	delete(data, "query_endtime")
	fmt.Printf("%q", data)
	// Output:
	// map["earliest_time":"2000-08-01T00:00:00" "latest_time":"2019-07-22T00:00:00" "neighbours":[map["neighbour":%!q(float64=2572) "timelines":[map["endtime":"2019-07-01T16:00:00" "starttime":"2019-06-25T00:00:00"]]] map["neighbour":%!q(float64=3128) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-07-15T00:00:00"]]] map["neighbour":%!q(float64=4474) "timelines":[map["endtime":"2019-07-20T16:00:00" "starttime":"2019-06-29T00:00:00"]]] map["neighbour":%!q(float64=5078) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-06-28T00:00:00"]]] map["neighbour":%!q(float64=7642) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-07-15T00:00:00"]]] map["neighbour":%!q(float64=14061) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-06-25T00:00:00"]]] map["neighbour":%!q(float64=15954) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-06-25T00:00:00"]]] map["neighbour":%!q(float64=22302) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-06-25T00:00:00"]]] map["neighbour":%!q(float64=25091) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-04-26T08:00:00"]]] map["neighbour":%!q(float64=26271) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-06-27T08:00:00"]]] map["neighbour":%!q(float64=26517) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-06-27T08:00:00"]]] map["neighbour":%!q(float64=28135) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-06-28T00:00:00"]]] map["neighbour":%!q(float64=28186) "timelines":[map["endtime":"2019-07-18T16:00:00" "starttime":"2019-07-12T00:00:00"]]] map["neighbour":%!q(float64=28210) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-07-01T08:00:00"]]] map["neighbour":%!q(float64=28266) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-07-01T08:00:00"]]] map["neighbour":%!q(float64=28768) "timelines":[map["endtime":"2019-07-12T16:00:00" "starttime":"2019-07-12T16:00:00"]]] map["neighbour":%!q(float64=29117) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-07-17T16:00:00"]]] map["neighbour":%!q(float64=31122) "timelines":[map["endtime":"2019-07-17T16:00:00" "starttime":"2019-04-26T08:00:00"]]] map["neighbour":%!q(float64=35916) "timelines":[map["endtime":"2019-07-10T00:00:00" "starttime":"2019-06-26T16:00:00"]]] map["neighbour":%!q(float64=38147) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-06-25T00:00:00"]]] map["neighbour":%!q(float64=38235) "timelines":[map["endtime":"2019-07-19T08:00:00" "starttime":"2019-06-28T00:00:00"]]] map["neighbour":%!q(float64=41495) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-06-25T00:00:00"]]] map["neighbour":%!q(float64=42459) "timelines":[map["endtime":"2019-07-14T16:00:00" "starttime":"2019-06-27T00:00:00"]]] map["neighbour":%!q(float64=42673) "timelines":[map["endtime":"2019-06-30T16:00:00" "starttime":"2019-06-30T16:00:00"]]] map["neighbour":%!q(float64=52999) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-06-25T16:00:00"]]] map["neighbour":%!q(float64=53137) "timelines":[map["endtime":"2019-06-24T16:00:00" "starttime":"2019-04-26T08:00:00"]]] map["neighbour":%!q(float64=53175) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-06-25T00:00:00"]]] map["neighbour":%!q(float64=62023) "timelines":[map["endtime":"2019-07-04T16:00:00" "starttime":"2019-06-28T00:00:00"]]] map["neighbour":%!q(float64=63956) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-06-26T00:00:00"]]] map["neighbour":%!q(float64=134090) "timelines":[map["endtime":"2019-06-29T08:00:00" "starttime":"2019-06-29T08:00:00"]]] map["neighbour":%!q(float64=197540) "timelines":[map["endtime":"2019-07-19T16:00:00" "starttime":"2019-06-26T08:00:00"]]] map["neighbour":%!q(float64=262526) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-06-26T16:00:00"]]] map["neighbour":%!q(float64=263152) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-07-16T16:00:00"]]] map["neighbour":%!q(float64=264461) "timelines":[map["endtime":"2019-06-24T16:00:00" "starttime":"2019-04-26T08:00:00"]]] map["neighbour":%!q(float64=267750) "timelines":[map["endtime":"2019-07-21T16:00:00" "starttime":"2019-06-26T00:00:00"]]]] "resource":"64496"]
}
